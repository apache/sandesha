<module name="sandesha2" class="org.apache.sandesha2.SandeshaModule">

    <Description>
        This module implements WS-ReliableMessaging for Axis2. This implements both the WSRM submitted spec and the new spec being developed under the OASIS WSRX group.
    </Description>
    
    <inflow>
        <handler name="SandeshaGlobalInHandler" class="org.apache.sandesha2.handlers.SandeshaGlobalInHandler">
            <order phase="PreDispatch" after="AddressingFinalInHandler" />
            <!-- <order after="addressingSubmissionInHandler" phase="PreDispatch"/>  cant do this-->
        </handler> 
        <handler name="SandeshaInHandler" class="org.apache.sandesha2.handlers.SandeshaInHandler">
            <order phase="RMPhase"/>
        </handler>
    </inflow>

    <outflow>        
        <handler name="SandeshaOutHandler" class="org.apache.sandesha2.handlers.SandeshaOutHandler">
            <order phase="RMPhase"/>
        </handler>   
    </outflow>
    
    <INfaultflow>        
        <handler name="SandeshaGlobalInHandler" class="org.apache.sandesha2.handlers.SandeshaGlobalInHandler">
            <order phase="PreDispatch" after="AddressingFinalInHandler" />
            <!-- <order after="addressingSubmissionInHandler" phase="PreDispatch"/>  cant do this-->
        </handler> 
        <handler name="SandeshaInHandler" class="org.apache.sandesha2.handlers.SandeshaInHandler">
            <order phase="RMPhase"/>
        </handler>
    </INfaultflow>
    
    <OUTfaultflow>        
        <handler name="SandeshaOutHandler" class="org.apache.sandesha2.handlers.SandeshaOutHandler">
            <order phase="RMPhase"/>
        </handler>   
    </OUTfaultflow>

    <operation name="RMInOnlyOperation" mep="http://www.w3.org/2004/08/wsdl/in-only">
        <messageReceiver class="org.apache.sandesha2.msgreceivers.RMMessageReceiver"/>
        
        <!-- namespaces for the 2005-02 spec -->
        
        <actionMapping>http://schemas.xmlsoap.org/ws/2005/02/rm/TerminateSequence</actionMapping>
        <actionMapping>http://schemas.xmlsoap.org/ws/2005/02/rm/SequenceAcknowledgement</actionMapping>
        <actionMapping>http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequenceResponse</actionMapping>

        <!-- namespaces for the 2005-10 spec -->
        
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/SequenceAcknowledgement</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/CreateSequenceResponse</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/AckRequested</actionMapping>
     </operation>
 
     <operation name="RMInOutOperation" mep="http://www.w3.org/2004/08/wsdl/in-out">
        <messageReceiver class="org.apache.sandesha2.msgreceivers.RMMessageReceiver"/>
        
        <!-- namespaces for the 2005-02 spec -->
        <actionMapping>http://schemas.xmlsoap.org/ws/2005/02/rm/CreateSequence</actionMapping>

        <!-- namespaces for the 2005-10 spec -->
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/CreateSequence</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/TerminateSequence</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/CloseSequence</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/TerminateSequenceResponse</actionMapping>
        <actionMapping>http://docs.oasis-open.org/ws-rx/wsrm/200602/CloseSequenceResponse</actionMapping>

    </operation>
    
 
    <!--  PARAMETERS FOR THE DB 					   -->
          =====================
    <parameter name="db.conn.id" locked="xsd:false">jdbc:derby:SANDESHA2DB;create=true</parameter>
    <parameter name="db.driver" locked="xsd:false">org.apache.derby.jdbc.EmbeddedDriver</parameter>
    <parameter name="db.sql.dialect" locked="xsd:false">org.hibernate.dialect.DerbyDialect</parameter>
    <parameter name="db.create.mode" locked="xsd:false">update</parameter> 
    <parameter name="db.username" locked="xsd:false"></parameter> 
    <parameter name="db.password" locked="xsd:false"></parameter>      
    
<!--

    <parameter name="RetransmissionInterval" locked="xsd:false">10000</parameter>
    <parameter name="AcknowledgementInterval" locked="xsd:false">4000</parameter>
    <parameter name="ExponentialBackoff" locked="xsd:false">false</parameter>
    <parameter name="InactivityTimeout" locked="xsd:false">5</parameter>
    <parameter name="InactivityTimeoutMeasure" locked="xsd:false">days</parameter>
    
    
    <parameter name="StorageManager" locked="xsd:false">org.apache.sandesha2.storage.inmemory.InMemoryStorageManager</parameter>


    <parameter name="InvokeInOrder" locked="xsd:false">true</parameter>
    
    
    <parameter name="MessageTypesToDrop" locked="xsd:false">none</parameter>
      -->

   <supported-policy-namespaces namespaces="http://ws.apache.org/sandesha2/policy" />

   <wsp:Policy xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" 
	xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
    xmlns:wsrm="http://ws.apache.org/sandesha2/policy" wsu:Id="RMPolicy">
         
      <wsrm:AcknowledgementInterval>4000</wsrm:AcknowledgementInterval>
       
      <wsrm:RetransmissionInterval>6000</wsrm:RetransmissionInterval>
      
      <!-- '-1' conveys that there is no limit to the max. number of retransmissions.-->
      <wsrm:MaximumRetransmissionCount>10</wsrm:MaximumRetransmissionCount>
      
      <wsrm:ExponentialBackoff>false</wsrm:ExponentialBackoff>
      
      <wsrm:InactivityTimeout>5</wsrm:InactivityTimeout>
           
      <wsrm:InactivityTimeoutMeasure>days</wsrm:InactivityTimeoutMeasure>
      
      <wsrm:InvokeInOrder>true</wsrm:InvokeInOrder>
      
      <!--
      <wsrm:TerminateOnTimeout>true</wsrm:TerminateOnTimeout>
      
      <wsrm:TerminateInterval>3000</wsrm:TerminateInterval>
      -->
      
      <!-- These will not be overriden by service level policies -->
      <wsrm:MessageTypesToDrop>none</wsrm:MessageTypesToDrop>  
                              
      <!-- This will not be overriden by service level policies -->
      <wsrm:StorageManagers>
      
       <wsrm:StorageManager>
            org.apache.sandesha2.storage.inmemory.InMemoryStorageManager 
        </wsrm:StorageManager> 
       
       <!-- 
        <wsrm:StorageManager>
            org.apache.sandesha2.storage.persistent.hibernate.PersistentStorageManager
        </wsrm:StorageManager> 
       -->
       
      </wsrm:StorageManagers>

<!--
	<wsrm:DBConnectionID>jdbc:derby:SANDESHA2DB;create=true</wsrm:DBConnectionID> 

	<wsrm:DBDriver>org.apache.derby.jdbc.EmbeddedDriver</wsrm:DBDriver> 

	<wsrm:DBSQLDialect>org.hibernate.dialect.DerbyDialect</wsrm:DBSQLDialect> 

	<wsrm:DBUsername></wsrm:DBUsername> 

	<wsrm:DBPassword></wsrm:DBPassword>  
-->
   
</wsp:Policy>

</module>