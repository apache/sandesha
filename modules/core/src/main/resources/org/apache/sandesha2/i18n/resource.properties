# Translation instructions.
# 1.  Each message line is of the form key=value.
#     Translate the value, DO NOT translate the key.
# 2.  The messages may contain arguments that will be filled in
#     by the runtime.  These are of the form: {0}, {1}, etc.
#     These must appear as is in the message, though the order
#     may be changed to support proper language syntax.
# 3.  If a single quote character is to appear in the resulting
#     message, it must appear in this file as two consecutive
#     single quote characters.
# 4.  Lines beginning with "#" (like this one) are comment lines
#     and may contain translation instructions.  They need not be
#     translated unless your translated file, rather than this file,
#     will serve as a base for other translators.


#-------------------------------------
#
#	General Sandesha messages
#
#-------------------------------------

cannotInitInMemoryStorageManager=Cannot initialize the given in-memory storage manager due to exception {0}.
cannotInitPersistentStorageManager=Cannot initialize the given persistent storage manager due to exception {0}.
cannotProceedDueToStorageManager=Sandesha2 Internal Error: the StorageManager is not available due to exception {0}.
cannotGetStorageKey=Sandesha2 Internal Error: could not obtain the sandesha2 storage key in order to store the message.
cannotGetStorageManager=Sandesha2 Internal Error: could not load the specified storage manager. 
storageManagerMustImplement=StorageManager {0} must implement the org.apache.sandesha2.storage.StorageManager interface.
cannotInitSecurityManager=Cannot initialize the given security manager due to exception {0}.
securityManagerMustImplement=SecurityManager {0} must implement the org.apache.sandesha2.storage.StorageManager interface.
cannotFindModulePolicies=No policies were found in the module.xml at the module initiation time.
cannotPauseThread=Cannot pause a non-running thread.

commitError=Exception thrown when trying to commit the transaction: {0}.
rollbackError=Exception thrown when trying to rollback the transaction: {0}.
deadlock=Sandesha2 Internal Error: deadlock detected. Transaction details ''{0}'', Bean details ''{1}''.
noTransaction=Sandesha2 Internal Error: current thread does not have a transaction.
inMsgError=Sandesha2 got an exception when processing an in message: {0}.
outMsgError=Sandesha2 got an exception when processing an out message: {0}.
invokeMsgError=Sandesha2 got an exception when invoking message: {0}.
sendMsgError=Sandesha2 got an exception when sending a message: {0}.
cannotSendMsgAsSequenceClosed=Sandesha2 could not send the message on sequence {0} as the sequence has been closed.
cannotSendMsgAsSequenceTerminated=Sandesha2 could not send the message on sequence {0} as the sequence has been terminated.
cannotSendMsgAsSequenceTimedout=Sandesha2 could not send the message on sequence {0} as the sequence has timed out.
noValidSyncResponse=Sandesha2 sender thread has not received a valid synchronous response.
classLoaderNotFound=Module class loader not found.

defaultPropertyBeanNotSet=Sandesha2 Internal Error: ''DefaultPropertyBean'' is not set.
propertyBeanNotSet=Sandesha2 Internal Error: ''PropertyBean'' is not set.
optionsObjectNotSet=Sandesha2 Internal Error: ''Options'' object is not set.
serviceContextNotSet=Sandesha2 Internal Error: ''ServiceContext'' is not set.
sequenceIdBeanNotSet=Sandesha2 Internal Error: ''SequenceIdBean'' is not set.
configContextNotSet=Sandesha2 Internal Error: ''ConfigurationContext'' is not set.
soapEnvNotSet=Sandesha2 Internal Error:  SOAP envelope is not set.
soapBodyNotPresent=Invalid SOAP message: the body is not present.
unknownSoapVersion=Unknown SOAP version {0}.
axisServiceIsNull=Sandesha2 Internal Error: ''AxisService'' is null.
msgContextNotSet=Sandesha2 Internal Error: ''MessageContext'' is null.
transportOutNotPresent=Sandesha2 Internal Error: original transport sender is not present.
workAlreadyAssigned=Work ''{0}'' is already assigned to a different Worker. Will try the next one.
couldNotFindOperation=Could not find operation for message type {0} and spec level {1}.
cannotChooseAcksTo=Could not find an appropriate acksTo for the reply sequence, given inbound sequence {0} and bean info {1}.
cannotChooseSpecLevel=Could not find an appropriate specification level for the reply sequence, given inbound sequence {0} and bean info {1}.

invalidMsgNumber=Sandesha2 Internal Error: invalid message number {0}.
nonUniqueResult=Sandesha2 Internal error: A search for a unique object resulted in several matches. Match 1 {0}, Match 2 {1}.
invalidStringArray=Sandesha2 Internal error: invalid String array : {0}.
cannotCointinueSender=Sandesha2 Internal error: cannot continue the Sender due to exception: {0}.
sendHasUnavailableMsgEntry=Sandesha2 Internal error: sender has an unavailable message entry {0}.
propertyInvalidValue=Sandesha2 Internal error: property {0} contains an invalid value.
invalidRange=The specified range was invalid: {0}, {1}.

policyBeanNotFound=Cant find a Sandesha2 policy bean.
cloneDoesNotMatchToOriginal=The elements of the original and cloned SOAP Envelopes do not match.
exceptionInFlowCompletion=Got exception in flowCompletion of SandeshaInHandler.
rmdBeanNotFound=RMDBean not available for the sequence:{0}.
policyHasNotBeenSet="WSRM Policy ''{0}'' has not been set for this endpoint.
rmEnforceFailure=The message with MessageID ''{0}'' is not WSRM enabled but the service enforces WSRM.
referenceMessageNotSetForSequence=ReferenceMessage has not been set for the sequence ''{0}''
moduleNotSet=Sandesha Module has not been set at the initiation
noPolling=A message has been waiting for a MakeConnection call. The message will continue to wait, but there may be a problem with the client configuration. Sandesha message type {0}.
freeingTransport=Freeing transport resources. A message has held the transport for too long, check the log for other failures.

#-------------------------------------
#
#	Protocol Oriented Messages
#
#-------------------------------------

rmNamespaceNotMatchSequence=Validation failed. The RM namespace value {0} of the message does not match {1} for sequence {2}.
unknownWSAVersion=Unknown WS-Addressing version {0}.
emptyAckRequestSpecLevel=Empty AckRequest messages can only be sent with the v1_1 spec. You are using spec version {0}.
closeSequenceSpecLevel=Close sequence messages can only be sent with the v1_1 spec. You are using spec version {0}.
unknownSpec=Unknown specification version {0}.
unknownRMNamespace=Unknown rm namespace value {0}.
unknownNamespace=Unsupported namespace {0}.
cannotDecideRMVersion=Message does not has a valid RM namespace value - cannot decide the RM version.
specDoesNotSupportElement=Spec ''{0}'' does not support the element {1}.
couldNotSendCreateSeqResponse=Could not send a CreateSequenceResponse message due to exception {0}.

couldNotSendTerminate=Could not send the terminate message due to error {0}.
couldNotSendClose=Could not send the close sequence message due to error {0}.
couldNotSendTerminateResponse=Could not send the terminate sequence response.  Check linked exception for details.
couldNotSendCloseResponse=Could not send the CloseSequenceResponse due to exception {0}.
couldNotSendTerminateSeqNotFound=Internal sequenceID {0} was not found: cannot send the terminate message.
cannotSendAckRequestException=Could not send the ackRequest message on sequence {0} due to an exception: {1}
ackRequestMultipleParts=Passed message has more than one AckRequest. You can have only one.
noAckRequestPartFound=No AckRequested part was present in the message.
noSequenceEstablished=A sequence with the given sequence ID {0} has not been established, has been terminated or could not be found.
invalidInternalSequenceID=Sandesha2 Internal Error: The internal sequence ID {0} is not valid.
createSeqEntryNotFound=''Create Sequence'' entry is not found.

toEPRNotValid=The ''To'' endpoint reference address is not set correctly: {0}.
cannotFindSequence=Cannot find the sequence with ID {0}.
msgNumberMustBeLargerThanZero=Message number {0} is invalid: this value has to be larger than zero.
msgNumberNotLargerThanLastMsg=The message number {0} is not larger than the last message sent on this sequence {1}.
msgNumberLargerThanLastMsg=The message number {0} is larger than the value {1}, which was previously declared as the last message.
ackInvalidNotSent=The SequenceAcknowledgement received is invalid as the acknowledgement contains messages that have not been sent.
cannotHaveFinalWithNack=The ''Final'' element cannot be present when there are Nack elements under the SequenceAcknowledgement.
accptButNoSequenceOffered=Error: An ''accept'' was received but there was no offered sequence entry.
relatesToNotAvailable: Invalid create sequence message: ''RelatesTo'' part is not available.
cannotDerriveAckInterval=Cannot derive the ''Acknowledgement Interval'' from the passed string {0}.
cannotDerriveRetransInterval=Cannot derive the ''Retransmission Interval'' from the passed string {0}.
cannotDerriveInactivityTimeout=Cannot derive the ''Inactivity Timeout'' from the passed string {0}.
noCreateSeqParts=No ''CreateSequence'' part is present in the create sequence message.
reliableMessagingNotEnabled=WS-RM not enabled for service with name {0}.
noAcceptPart=An ''Accept'' part has not been generated for the ''create sequence request'' with an offer part.
noAcksToPartInCreateSequence=No ''AcksTo'' part is present in the create sequence message.
tempSeqIdNotSet=Error: ''TempSequenceId'' is not set.
ackRandDoesNotHaveCorrectValues=The ack range {0} does not have correct values for Upper and Lower attributes.
cannotSetAckRangeNullElement=Cannot set Ack Range part since element is null.
acksToStrNotSet=acksToStr Seqeunce property is not set correctly.
invalidSequenceID=invalid sequence ID: {0}.
cantSendMakeConnectionNoTransportOut=Can''t send the MakeConnection reply since the message does not has a TransportOutDescription.
makeConnectionDisabled=Cannot handle synchronous 2-way connections because MakeConnection is not enabled. Either enable MakeConnection or reconfigure your application to use asynchronous connections.
makeConnectionWarning=Warning: Synchronous 2-way connections with WS-RM 1.1 require MakeConnection, and it is not enabled. If your application invokes synchronous 2-way operations then it will fail.

noCreateSeqResponse=''CreateSequenceResponse'' part is not available.
noTerminateSeqPart=''Terminate Sequence'' part is not available.
noNackInSeqAckPart=Passed ''sequence ack'' element does not contain a ''nack'' part. {0}.
nackDoesNotContainValidLongValue=''Nack'' element does not contain a valid long value {0}.
noneNotAllowedNamespace=The given namespace {0} does not allow the ''None'' part to be added to the ''sequenceAcknowledgement'' element.
noneNotAllowedAckRangesPresent=The ''None'' element cannot be present when there are acknowledgement range elements under the ''sequenceAcknowledgement'' element.
noneNotAllowedNackPresent=The ''None'' element cannot be present when there are Nack elements under the ''sequenceAcknowledgement'' element.
finalNotAllowedNamespace=The given namespace {0} does not allow the 'Final' part to be added to the ''sequenceAcknowledgement'' element.
noSeqFaultInElement=The passed element {0} does not contain a ''Sequence Fault'' element.
noSeqOfferInElement=The passed element {0} does not contain a ''SequenceOffer'' part.
noTerminateSeqInElement=The passed element {0} does not contain a ''terminate sequence'' part.
noTerminateSeqResponseInElement=The passed element {0} does not contain a ''terminate sequence response'' part.
noAcceptPartInElement=The passed element {0} does not contain an ''Accept'' part.
noUpperOrLowerAttributesInElement=The passed element {0} does not contain upper or lower attributes.
noSequencePartInElement=The passed element {0} does not contain a ''Sequence'' part.
noLastMessagePartInElement=The passed element {0} does not contain a ''Last Message'' part.
noFinalPartInElement=The passed element {0} does not contain a ''Final'' part. 
noNonePartInElement=The passed element {0} does not contain a ''None'' part.
noCloseSequencePartInElement=The passed element {0} does not contain a ''close sequence'' part.
noMessageNumberPartInElement=The passed sequnce element {0} does not contain a ''message number'' part.
noCloseSeqResponsePartInElement=The passed element {0} does not contain a ''close sequence response'' part.
noExpiresPartInElement=The passed elemenet {0} does not contain an ''Expires'' part.
noCreateSeqPartInElement=The passed element {0} does not contain a ''create sequence'' part.
noCreateSeqResponsePartInElement=The passed element {0} does not contain a ''create seqence response'' part.
noFaultCodePart=The passed element {0} does not contain a ''Fault Code'' part.
cannotFindAddressElement=Cannot find an ''Address'' part in the given element {0}.
cannotFindAddressText=The passed element {0} does not have a valid address text.
nullPassedElement=The passed element is null.
seqPartIsNull=Sequence part is null.
incomingSequenceNotValidID=The ID for the incoming sequence is not valid: ''{0}''.

seqFaultCannotBeExtractedToNonHeader=Cannot extract ''Sequence Fault'' part from a non-header element.
seqElementCannotBeAddedToNonHeader=''Sequence'' element cannot be added to non-header element.
ackRequestedCannotBeAddedToNonHeader=''Ack Requested'' part cannot be added to a non-header element.
terminateSeqCannotBeAddedToNonBody=Cannot add ''terminate sequence'' to a non-body element.
terminateSeqResponseCannotBeAddedToNonBody=Cannot add ''terminate sequence response'' to a non-body element.
closeSeqCannotBeAddedToNonBody=Cannot add ''close sequence'' to a non-body element.
closeSeqResponseCannotBeAddedToNonBody=Cannot add ''close sequence response'' to a non-body element.
createSeqCannotBeAddedToNonBody=Cannot add ''create sequence'' part to a non-body element.
createSeqResponseCannotBeAddedToNonBody=Cannot get ''create sequnce response'' from a non-body element.
closeSeqPartNullID=Cannot add ''close sequence'' part since identifier is not set.
closeSeqResponsePartNullID=Cannot add ''close sequence response'' part since identifier is not set.
invalidIdentifier=The passed element {0} does not contain a valid identifier part.
ackRequestNullID=Cannot add ''ack request'' part since the identifier is not set.
createSeqNullAcksTo=Cannot add a ''create seqeunce part'' since ''acksTo'' is not set.
acceptNullAcksTo=Cannot add ''Accept'' part since ''acksTo'' is not set.
noAcksToPart=The passed element {0} does not contain an ''acksTo'' part.
cannotProcessExpires=Cannot process ''Expires'' since the duration value is not valid.
noFaultCode=Cannot add ''Fault Code'' since the the value is not set correctly.

cannotSetACksTo=Cannot set the of the AcksTo element address as the value is not valid {0}.
cannotSetEndpoint=Cannot set the address of the Elndpoint element as the value is not valid {0}.
setAValidMsgNumber=Set A Valid Message Number {0}.
addressNotValid=Cannot set the address - the address value is not valid.

elementMustForSpec=Element ''{0}'' must be present for the spec ''{1}''.
couldNotSendFaultDueToException="Could not send the fault ''{0}'' due to the exception " ''{1}'';

#-------------------------------------
#
#	Client messages
#
#-------------------------------------

incommingSequenceReportNotFound=An incoming sequence report is not present for the given sequenceID {0}.
cannotFindReportForGivenData=Cannnot find a sequence report for the given data {0}.

outSeqIDIsNull=''OutSequenceId'' is null.
requestMsgNotPresent=Request message is not present.
newSeqIdIsNull=New sequence Id is null.
terminateAddedPreviously=Terminate was added previously.
nullMsgId=Key (MessageId) is null. Cannot insert.
failedToStoreMessage=Failed to store message due to exception {0}.
failedToLoadMessage=Failed to load message due to exception {0}.
entryNotPresentForUpdating=Entry is not present for updating.
appMsgIsNull=Application message is null.
cannotFindReqMsgFromOpContext=Cannot find the request message from the operation context.
toEPRNotSet=To EPR has not been set in the given message.
toBeanNotSet=The 'To' Sequence Property Bean has not been set for the sequence.
cannotFindTransportInDesc=Cannot find the transport in description {0} in the ConfigurationContext.
invalidElementFoundWithinElement=Found invalid ''{0}'' element within ''{1}'' element.
invokerNotFound=An invoker thread was not found to dispatch messages on the inbound sequence {0}.
cannotSetPolicyBeanServiceNull=Cannot set the given SandeshaPolicyBean since the AxisService is not present
offerRequiredForAnon=If you are going to try sync in-out message exchanges with RM 1.0, you must do an offer

#------------------
# Security messages
#------------------
secureDummyNoProof="Dummy security manager cannot check proof of possession"
secureDummyNoToken="Dummy security manager cannot serialise or recover security tokens"
secureDummyNoSTR  ="Dummy security manager cannot parse or write security token references"


errorRetrievingSecurityToken = Error retrieving security token from token storage.
proofOfPossessionNotVerified = Proof of possession not verified.
noSecurityResults = No Security results.
noSecConvTokenInPolicy = No SecureConversationToken in policy.

couldNotLoadModulePolicies=Could not load module policies. Using default values.
modulePoliciesLoaded=Module policies were successfully loaded.

referencedMessageNotFound = Reference message is not present for the sequence with property key {0}
createSequenceRefused=The Create Sequence request has been refused by the RM Destination
messageNumberRollover=The maximum value for wsrm:MessageNumber has been exceeded.
sequenceTerminatedFault=The Sequence has been terminated due to an unrecoverable error.
unknownSequenceFault=The value of wsrm:Identifier is not a known Sequence identifier.
invalidAckFault=The SequenceAcknowledgement violates the cumulative Acknowledgement invariant.
cannotAcceptMsgAsSequenceClosedFault=The Sequence is closed and can not accept new messages. 
